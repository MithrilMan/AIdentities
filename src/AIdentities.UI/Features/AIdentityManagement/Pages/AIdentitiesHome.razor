@page "/aidentities"
@inherits AppPage<AIdentitiesHome>

<div class="d-flex flex-column gap-1 flex-grow-1 mud-width-full overflow-x-hidden overflow-y-auto">
   <MudGrid Spacing="0">
      <MudItem xs="12" lg="3" Class="d-flex flex-column px-4 relative">
         @if (_state.IsEditing)
         {
            <MudStack Row="true" AlignItems="AlignItems.Center">
               <MudIconButton Icon="@Icons.Material.Filled.KeyboardDoubleArrowLeft" Size="Size.Medium" Color="Color.Secondary" Variant="Variant.Filled" OnClick="ExitEditing" />
               <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Tertiary" Style="text-transform:uppercase">Editing</MudText>
            </MudStack>
            <MudStack Row="true" AlignItems="AlignItems.Center">
               <MudAvatar Size="Size.Large">
                  <MudImage Src="@_state.CurrentAIDentity!.Image" />
               </MudAvatar>
               <MudText Typo="Typo.h4">@_state.CurrentAIDentity!.Name</MudText>
            </MudStack>
            <MudSpacer />
            <MudStack Row="true">
               <MudButton Variant="Variant.Filled" IconSize="Size.Large" Size="Size.Large"
                       EndIcon="@Icons.Material.Filled.FileDownload"
                       OnClick="DownloadAIdentity">Download</MudButton>
               <MudSpacer />
               <MudButton Variant="Variant.Filled" IconSize="Size.Large" Size="Size.Large"
                       EndIcon="@("<path d=\"M14,12L10,8V11H2V13H10V16M20,18V6C20,4.89 19.1,4 18,4H6A2,2 0 0,0 4,6V9H6V6H18V18H6V15H4V18A2,2 0 0,0 6,20H18A2,2 0 0,0 20,18Z\" />")"
                       OnClick="Export">Export AIdentity</MudButton>
            </MudStack>
         }
         else
         {
            <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Tertiary">AIdentities</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.PersonAdd" IconSize="Size.Large" Size="Size.Large"
                    OnClick="CreateNewAIdentity">Create a new AIdentity</MudButton>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" IconSize="Size.Large" Size="Size.Large"
                    EndIcon="@("<path d=\"M14,12L10,8V11H2V13H10V16M20,18V6C20,4.89 19.1,4 18,4H6A2,2 0 0,0 4,6V9H6V6H18V18H6V15H4V18A2,2 0 0,0 6,20H18A2,2 0 0,0 20,18Z\" />")"
                    OnClick="Import">Import AIdentity</MudButton>
            <MudSpacer />
         }
      </MudItem>
      <MudHidden Breakpoint="Breakpoint.SmAndDown">
         <MudItem xs="12" lg="9">
            <MudPaper Class="overflow-y-auto" Style="max-height:225px">
               <div class="pa-4 d-flex flex-column flex-grow-1">
                  <MudSpacer></MudSpacer>
                  <MudText Typo="Typo.h4" Color="Color.Tertiary">Explore your AIdentities</MudText>
                  <MudText Typo="Typo.h6" Class="mb-5">Say goodbye to basic AI interactions and hello to customizable, purpose-driven agents.</MudText>
                  <MudText Typo="Typo.subtitle1">
                     With AIdentity's unique plugin system, you can easily enhance your AI with specialized features and an intuitive UI.
                  </MudText>
                  <MudText Typo="Typo.body1">
                     Get ready to tackle multiple tasks with ease, while keeping your AI's core properties intact.
                  </MudText>
                  <MudText Typo="Typo.body1" Class="mt-4">
                     The future of AI versatility is here, and it's called AIdentity!
                  </MudText>
                  <MudSpacer></MudSpacer>
               </div>
            </MudPaper>
         </MudItem>
      </MudHidden>
   </MudGrid>

   @if (_state.CurrentAIDentity is null)
   {
      <AIdentityGallery @bind-AIdentity="_state.CurrentAIDentity"
                     OnEdit="EditAIdentity" OnDelete="DeleteAIdentity"
                     @bind-NeedToReload="_state.NeedToReload" />
   }
   else
   {
      <MudTabs Class="flex-h-fix flex-grow-1" PanelClass="d-flex flex-column flex-h-fix flex-grow-1" TabPanelClass="px-0" MinimumTabWidth="120px"
            Elevation="4" Rounded="false" Color="@Color.Primary" SliderColor="Color.Tertiary"
            KeepPanelsAlive="true" @ref="_tabs" @bind-ActivePanelIndex="_state.ActivePanelIndex">
         <TabGeneric @bind-AIdentity="@_state.CurrentAIDentity"
                  IsEditing="_state.IsEditing"
                  IsEditingChanged="OnIsEditingChanged" />
         @foreach (var featureRegistration in AIdentityFeatureRegistrations)
         {
            <AIdentityFeatureTab @bind-IsEditing="_state.IsEditing"
                           FeatureRegistration="featureRegistration"
                           AIdentity="_state.CurrentAIDentity" />
         }
      </MudTabs>
   }
</div>
