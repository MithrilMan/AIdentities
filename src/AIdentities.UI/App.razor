@using AIdentities.UI.Features.Core.Services.PageManager;
@using AIdentities.UI.Features.Core.Services.PluginStaticResources
@using Microsoft.Extensions.FileProviders;

<Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="@GetAdditionalAssemblies()">
   <Found Context="routeData">
      <RouteView RouteData="@routeData" DefaultLayout="@typeof(Features.Core.Pages.MainLayout)" />
      <FocusOnNavigate RouteData="@routeData" Selector="h1" />
   </Found>
   <NotFound>
      <PageTitle>Not found</PageTitle>
      <LayoutView Layout="@typeof(Features.Core.Pages.MainLayout)">
         <p role="alert">Sorry, there's nothing at this address.</p>
      </LayoutView>
   </NotFound>
</Router>

@code {
   [Inject] IPluginManager PluginManager { get; set; } = default!;
   [Inject] IDebuggablePagesManager DebuggablePagesManager { get; set; } = default!;
   [Inject] PluginStartupService PluginStartupService { get; set; } = default!;
   //[Inject] IPluginStaticResourceProvider PluginStaticResourceProvider { get; set; } = default!;
   //[Inject] IWebHostEnvironment WebHostEnvironment { get; set; } = default!;

   IEnumerable<System.Reflection.Assembly> GetAdditionalAssemblies()
   {
      return PluginManager.PagePluginAssemblies.Concat(DebuggablePagesManager.DebuggableModuleAssemblies);
   }

   protected override void OnInitialized()
   {
      base.OnInitialized();
      //WebHostEnvironment.WebRootFileProvider = new CompositeFileProvider(new[] { PluginStaticResourceProvider, WebHostEnvironment.WebRootFileProvider });
   }

   protected override async Task OnInitializedAsync()
   {
      await PluginStartupService.StartupPlugins().ConfigureAwait(false);
   }
}
