using Microsoft.AspNetCore.Http.Features;

namespace AIdentities.Shared.Features.CognitiveEngine.Memory.Conversation;

/// <summary>
/// A conversation message.
/// It's part of a <see cref="Conversation"/>.
/// The message can be generated by the AI or by a human reflected by the <see cref="IsAIGenerated"/> property.
/// If the message is generated by the AI, the <see cref="AuthorId"/> property will contain the AIdentity that generated the message.
/// If the message is generated by a human, the <see cref="AuthorId"/> property will contain the human Id that generated the message.
/// Features can be attached to a message and can be used by plugins to extend the functionality of the message.
/// </summary>
public record ConversationMessage
{
   /// <summary>
   /// The message Id.
   /// </summary>
   public Guid Id { get; private set; }

   /// <summary>
   /// The date and time the message was created.
   /// </summary>
   public DateTimeOffset CreationDate { get; private set; }

   /// <summary>
   /// True if the message was generated by the AI.
   /// False if the message was generated by a user.
   /// Depending 
   /// </summary>
   public bool IsAIGenerated { get; private set; }

   /// <summary>
   /// The message author.
   /// If IsGenerated is true, this refers to the AIdentity that generated the message.
   /// If IsGenerated is false, this refers to the user that generated the message.
   /// </summary>
   public Guid AuthorId { get; private set; }

   /// <summary>
   /// The message author name.
   /// </summary>
   public string AuthorName { get; private set; } = default!;

   /// <summary>
   /// The message text.
   /// </summary>
   public string Text { get; private set; } = default!;

   /// <summary>
   /// Contains optional audio data generated by a TTS connector.
   /// </summary>
   public virtual byte[]? Audio { get; private set; }

   /// <summary>
   /// An open door to ORM that can take advantage of this constructor (e.g. EF Core).
   /// </summary>
   protected ConversationMessage() { }

   public ConversationMessage(string text, AIdentity aIdentity)
      : this(
           isAIGenerated: true,
           authorId: aIdentity.Id,
           authorName: aIdentity.Name ?? aIdentity.Id.ToString(),
           text: text)
   { }

   public ConversationMessage(string text, Guid humanId, string humanName)
      : this(
           isAIGenerated: false,
           authorId: humanId,
           authorName: humanName,
           text: text)
   { }

   private ConversationMessage(bool isAIGenerated, Guid authorId, string authorName, string text)
   {
      Id = Guid.NewGuid();
      CreationDate = DateTimeOffset.UtcNow;
      IsAIGenerated = isAIGenerated;
      AuthorId = authorId;
      AuthorName = authorName;
      Text = text;
   }

   public void UpdateText(string text)
   {
      Text = text;
   }
}
