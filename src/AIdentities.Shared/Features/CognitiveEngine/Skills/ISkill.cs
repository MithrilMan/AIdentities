using AIdentities.Shared.Features.CognitiveEngine.Prompts;
using AIdentities.Shared.Features.CognitiveEngine.Thoughts;

namespace AIdentities.Shared.Features.CognitiveEngine.Skills;

public interface ISkill
{
   /// <summary>
   /// The definition of the skill.
   /// </summary>
   SkillDefinition Definition { get; internal set; }

   /// <summary>
   /// Execute the skill giving a natural language input.
   /// The natural language prompt can be generated by many sources, including user, other skills, thoughts, etc.
   /// While the skill is executing, it can stream back to the caller its thoughts.
   /// </summary>
   /// <param name="prompt">The natural language input generated by the AI agent.</param>
   /// <param name="context">
   /// The previous execution context of the skill in case of chained actions.
   /// Usually in a coordinated mission the first skill execution that follow the root request will
   /// be created while following ones will clear input variables preserving the outputs.
   /// If you pass a valid Skillcontext, all output variables will be preserved while input variables will be removed.
   /// </param>
   /// <param name="cancellationToken">A cancellation token.</param>
   /// <returns>A natural language stream of responses about the outcome.</returns>
   IAsyncEnumerable<Thought> ExecuteAsync(Prompt prompt, SkillExecutionContext context, CancellationToken cancellationToken);
}
